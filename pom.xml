<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.ufs</groupId>
	<artifactId>livraria</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Livraria</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<debug>true</debug>
		<javaee-api-version>7.0</javaee-api-version>
		<javase-api-version>1.7</javase-api-version>
		<junit-version>4.11</junit-version>
		<maven-antrun-plugin-version>1.7</maven-antrun-plugin-version>
		<maven-compiler-plugin-version>2.5.1</maven-compiler-plugin-version>
		<maven-surefire-plugin-version>2.16</maven-surefire-plugin-version>
		<maven-war-plugin-version>2.2</maven-war-plugin-version>
		<postgresql-version>9.3-1100-jdbc41</postgresql-version>
		<!-- <primefaces-version>4.0</primefaces-version> -->
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
		<project.reporting.outputEncoding>ISO-8859-1</project.reporting.outputEncoding>
		<skip-tests>false</skip-tests>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee-api-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql-version}</version>
		</dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.9</version>
        </dependency>

		<!-- <dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>${primefaces-version}</version>
		</dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<!-- <repositories>
		<repository>
			<id>prime-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>http://repository.primefaces.org</url>
			<layout>default</layout>
		</repository>
	</repositories> -->
	
	<build>
		<finalName>livraria</finalName>
		<resources> 
	        <resource> 
	                <directory>src/main/resources</directory> 
	        </resource> 
	        <resource> 
	                <directory>src/main/${application-server}-resources</directory> 
	        </resource> 
        </resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<inherited>true</inherited>
					<configuration>
						<debug>${debug}</debug>
						<debuglevel>lines,vars,source</debuglevel>
						<source>${javase-api-version}</source>
						<optimize>true</optimize>
						<target>${javase-api-version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin-version}</version>
					<configuration>
						<skipTests>${skip-tests}</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin-version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
	
		<profile>
			<id>glassfish</id>
			<activation>
		        <activeByDefault>true</activeByDefault>
		    </activation>
			<properties>
				<application-server>glassfish</application-server>
				<eclipselink-version>2.5.0</eclipselink-version>
				<glassfish-home>/home/livraria/dev/tools/glassfish/glassfish</glassfish-home>
				<maven-glassfish-plugin-version>2.1</maven-glassfish-plugin-version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.jpa</artifactId>
					<version>${eclipselink-version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.glassfish.maven.plugin</groupId>
						<artifactId>maven-glassfish-plugin</artifactId>
						<version>${maven-glassfish-plugin-version}</version>
						<configuration>
							<glassfishDirectory>${glassfish-home}</glassfishDirectory>
							<user>admin</user>
							<adminPassword>123456</adminPassword>
							<domain>
								<name>domain1</name>
								<adminPort>4848</adminPort>
								<httpPort>8080</httpPort>
							</domain>
							<components>
								<component>
									<name>${project.artifactId}</name>
									<artifact>${project.build.directory}/${project.build.finalName}.war</artifact>
								</component>
							</components>
							<debug>true</debug>
					        <echo>true</echo>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>wildfly</id>
			<properties>
				<application-server>wildfly</application-server>
				<hibernate-version>4.3.0.Final</hibernate-version>
				<wildfly-home>/home/livraria/dev/tools/wildfly</wildfly-home>
				<wildfly-maven-plugin-version>1.0.0.Beta1</wildfly-maven-plugin-version>
			</properties>
			<dependencies>
				<dependency>
		        	<groupId>org.hibernate</groupId>
		            <artifactId>hibernate-entitymanager</artifactId>
		            <version>${hibernate-version}</version>
		            <scope>test</scope>
		        </dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>${wildfly-maven-plugin-version}</version>
						<configuration>
							<jbossHome>${wildfly-home}</jbossHome>
							<force>true</force>
						</configuration>
						<executions>
							<execution>
								<id>undeploy</id>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
								<configuration>
									<ignoreMissingDeployment>true</ignoreMissingDeployment>
								</configuration>
							</execution>
							<execution>
								<id>deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deploy-only</goal>
								</goals>
								<configuration>
									<beforeDeployment>
										<commands>
											<command>deploy --force ${project.build.directory}/${project.build.finalName}/WEB-INF/lib/postgresql-${postgresql-version}.jar</command>
										</commands>
									</beforeDeployment>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	
</project>
